var app=angular.module("4screens.liveevent",["LocalStorageModule"]),Liveevent;!function(e){var t=function(){function e(){console.log("[ Liveevent ] Constructor")}return e.prototype.updatePage=function(e){console.log("[ Liveevent ] Update Page: "+e._id);var t=this.activePage?this.activePage.type+"":null;t&&t.indexOf("form")>-1&&(console.warn(this.EF.message),this.EF._engageform.navigation.pick()),this.activePage=e,this.activePageId=e._id,this.EF._engageform.initPage(e),this.EF.current.liveSettings=e.liveSettings,this.EF._engageform.navigation.enabled=!1,this.EF._engageform.navigation.position=0,this.EF._engageform.navigation.size=1,this.EF._engageform.navigation.hasStart=!1,this.EF._engageform.navigation.enabledStart=!1,this.EF._engageform.navigation.hasPrev=!1,this.EF._engageform.navigation.enabledPrev=!1,this.EF._engageform.navigation.hasNext=!1,this.EF._engageform.navigation.enabledNext=!1,this.EF._engageform.navigation.hasFinish=!1,this.EF._engageform.navigation.enabledFinish=!1,this.EF._engageform.navigation.distance=0,this.EF._engageform.navigation.prev=function(e){},this.EF._engageform.navigation.next=function(e,t){},this.EF._engageform.navigation.start=function(e){},this.EF._engageform.navigation.finish=function(e,t){}},e.prototype.updateQuiz=function(e){console.log("[ Liveevent ] Update Quiz: "+e._engageformId),this.activeQuiz=e,this.activeQuizId=e._engageformId},e.prototype.initChat=function(e){var t=Extension.$q.defer();return this.chat?(t.resolve(),t.promise):(this.chat=new ChatModule.Chat(e),this.chat.init())},e.prototype.initSocket=function(e){var t=this;console.log("[ Liveevent ] Init socket");var n=Extension.config.backend.socket+Extension.config.liveEvent.socketNamespace;n=n.replace(":liveEventId",e.id),this.socket=Extension.io.connect(n,{"force new connection":!0}),this.socket.on("connect",function(){console.log("[ Liveevent:Socket ] Connected"),t.socket.emit("getStatus",{liveEventId:e.id})}),this.socket.on("disconnect",this.initSocket),this.socket.on("error",function(e){console.warn(e)}),this.socket.on("liveEventStatus",function(e){(e.activeQuestionId!==t.activePageId||e.activeQuizId!==t.activeQuizId)&&(e.activeQuizId!==t.activeQuizId?(console.log("[ Liveevent:Socket ] Quiz changed"),t.EF.init({id:e.activeQuizId,mode:"default"}).then(function(n){t.updateQuiz(n),t.getPageById(e.activeQuestionId).then(function(e){t.updatePage(e)})})):(console.log("[ Liveevent:Socket ] Only Page changed"),t.getPageById(e.activeQuestionId).then(function(e){t.updatePage(e)})))})},e.prototype.getById=function(e){var t=Extension.config.backend.domain+Extension.config.liveEvent.liveEventUrl;return t=t.replace(":liveEventId",e),Extension.$http.get(t).then(function(e){return-1!==[200,304].indexOf(e.status)?e.data:Extension.$q.reject(e)})},e.prototype.getPageById=function(e){var t=Extension.config.backend.domain+Extension.config.liveEvent.activeQuestion;return t=t.replace(":questionId",e),Extension.$http.get(t).then(function(e){return-1!==[200,304].indexOf(e.status)?(console.log("[ Liveevent ] Get PAGE: "+e.data._id),e.data):void this.$q.reject(e)})},e.prototype.init=function(e){var t=this;console.log("[ Liveevent ] Init: "+e.id);var n=Extension.$q.defer();return this.EF=e.engageform,this.getById(e.id).then(function(i){t.initSocket(e),t.initChat(i.chatId).then(function(){n.resolve(t)})}),n.promise},e}();e.Liveevent=t}(Liveevent||(Liveevent={}));var ChatModule;!function(e){var t=function(){function e(e){return this.messages=[],console.log("[ Chat ] Constructor"),this.id=e,this}return e.prototype.login=function(e,t){this.user={accessToken:e.accessToken,user:e.userID,userLink:t.link,userName:t.name,userID:e.userID}},e.prototype.logout=function(){this.user=null},e.prototype.updateChat=function(e){console.log("[ Chat ] Update chat"),this.id=e.id,this.name=e.name,this.premoderated=e.premoderated,this.getMsgs()},e.prototype.sendMsg=function(e){var t=this;if(console.log("[ Chat ] Posting msg"),this.user){var n,i=Extension.config.backend.domain+Extension.config.chat.sendUrl;i=i.replace(":chatId",this.id),n={accessToken:this.user.accessToken,date:Date.now(),hidden:!1,id:this.user.userId,msg:e,user:this.user.user,userLink:this.user.userLink,userName:this.user.userName},Extension.$http.post(i,n).then(function(e){t.messages.push(n)})}},e.prototype.getMsgs=function(){var e=this;console.log("[ Chat ] Get old msgs");var t=Extension.config.backend.domain+Extension.config.chat.messagesUrl;return t=t.replace(":chatId",this.id),Extension.$http.get(t).then(function(t){e.messages=t.data})},e.prototype.initSocket=function(){var e=this;console.log("[ Chat:Socket ] Init socket");var t=Extension.config.backend.socket;this.socket=Extension.io.connect(t,{"force new connection":!0}),this.socket.on("error",function(e){console.warn(e)}),this.socket.on("connect",function(t){console.log("[ Chat:Socket ] Connected"),e.socket.emit("joinRoom",e.id)}),this.socket.on("msg",function(t){console.log("[ Chat:Socket ] New msg"),e.messages.unshift(t)}),this.socket.on("disconnect",this.initSocket)},e.prototype.init=function(){var e=this;console.log("[ Chat ] Init: "+this.id);var t=Extension.config.backend.domain+Extension.config.chat.detailUrl;return t=t.replace(":chatId",this.id),Extension.$http.get(t).then(function(t){return e.updateChat(t.data),e.initSocket(),t})},e}();e.Chat=t}(ChatModule||(ChatModule={}));var Extension=function(){function e(t,n,i,o){e.$http=t,e.$q=n,e.localStorage=i,e.config=o}return e.prototype.init=function(t){e.io=t.io;var n=new Liveevent.Liveevent;return n.init(t)},e}();Extension.$inject=["$http","$q","localStorageService","ApiConfig"],app.service("Liveevent",Extension);
//# sourceMappingURL=liveevent.min.js.map