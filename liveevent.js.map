{"version":3,"sources":["app.ts","engageform/enum.ts","api/api.ts","liveevent/liveevent.ts","chat/chat.ts","bootstrap.ts","api/iquiz.ts","page/enum.ts","page/isettings.ts","engageform/iengageform.ts","extend.ts","header.ts","util/event.ts"],"names":["Engageform","Engageform.Type","Engageform.Mode","Liveevent","Liveevent.Liveevent","Liveevent.Liveevent.constructor","Liveevent.Liveevent.summaryStatsUnification","Liveevent.Liveevent.getAnswersForSummary","Liveevent.Liveevent.updatePage","Liveevent.Liveevent.removePage","Liveevent.Liveevent.updateQuiz","Liveevent.Liveevent.removeQuiz","Liveevent.Liveevent.initChat","Liveevent.Liveevent.liveStatusEventHandler","Liveevent.Liveevent.initSocket","Liveevent.Liveevent.getById","Liveevent.Liveevent.getPageById","Liveevent.Liveevent.init","ChatModule","ChatModule.featuredMessageNotify","ChatModule.updateFeaturedStatus","ChatModule.Chat","ChatModule.Chat.constructor","ChatModule.Chat.registerUpdateMessageHandler","ChatModule.Chat.login","ChatModule.Chat.logout","ChatModule.Chat.updateChat","ChatModule.Chat.sendMsg","ChatModule.Chat.getRandomColor","ChatModule.Chat.getMsgs","ChatModule.Chat.handleNewMessageData","ChatModule.Chat.initSocket","ChatModule.Chat.init","Extension","Extension.constructor","Extension.init","Page","Page.CaseType","Page.Type","Util","Util.Event","Util.Event.constructor","Util.Event.listen","Util.Event.unsubscribe","Util.Event.trigger"],"mappings":"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","file":"liveevent.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\n\nvar app = angular.module('4screens.liveevent', ['LocalStorageModule']);","module Engageform {\n  export enum Type {\n    Undefined,\n    Live,\n    Outcome,\n    Poll,\n    Score,\n    Survey\n  }\n\n  export enum Mode {\n    Undefined,\n    Default,\n    Preview,\n    Result,\n    Summary\n  }\n}\n","/// <reference path=\"iliveevent.ts\" />\n","/// <reference path=\"iliveevent.ts\" />\n\nmodule Liveevent {\n  interface summaryStatData {\n    questionId: string;\n    avg: number;\n  }\n\n  export class Liveevent implements ILiveevent {\n    enabled: boolean;\n    id: string;\n    title: string;\n\n    activePage: Page.IPage;\n    activeQuiz: Engageform.IEngageform;\n    activePageId: string;\n    activeQuizId: string;\n    socket: SocketIOClient.Socket;\n    EF: Engageform.IEngageform;\n    chat: ChatModule.IChat;\n    currentEngageform: Engageform.IEngageform;\n    sendAnswerCallback: API.answerCallback;\n\n    // Embed settings are stored on the instance since it's needed much after the initialisation.\n    embedSettings: API.IEmbedSettings;\n\n    event: Util.Event;\n\n    constructor() {\n      this.event = new Util.Event();\n    }\n\n    private summaryStatsUnification(data): summaryStatData {\n      var result = <summaryStatData>{};\n\n      result.questionId = data._id;\n\n      if (data.type === 'rateIt') {\n        result.avg = data.stats.avg;\n\n        return result;\n      }\n\n      _.each(data.answers, function (answer: { percent: number, _id: string }) {\n        result[answer._id] = answer.percent;\n      });\n\n      return result;\n    };\n\n    private getAnswersForSummary(): ng.IPromise<any> {\n      var url = Extension.config.backend.domain + Extension.config.engageform.presentationViewStats;\n      url = url.replace(':questionId', this.activePageId);\n\n      return Extension.$http.get(url).then((res) => {\n        if ([200, 304].indexOf(res.status) !== -1) {\n          return this.summaryStatsUnification(res.data);\n        }\n\n        return Extension.$q.reject(res);\n      });\n    };\n\n    private updatePage(page: Page.IPage) {\n      var __type = this.activePage ? (this.activePage.type + '') : null;\n\n      // Check if form and if so, send all inputs\n      if (__type && __type.indexOf('form') > -1) {\n        this.currentEngageform.navigation.pick(null, null, {quiet: true});\n      }\n\n      this.activePage = page;\n      this.activePageId = page._id;\n\n      this.currentEngageform.message = null;\n      this.currentEngageform.initPage(page);\n\n      // Add liveSettings\n      this.currentEngageform.liveSettings = <Page.ILiveSetting>page.liveSettings;\n\n      // Overwrite navigation\n      this.currentEngageform.navigation.enabled = false;\n      this.currentEngageform.navigation.position = 0;\n      this.currentEngageform.navigation.size = 1;\n      this.currentEngageform.navigation.hasStart = false;\n      this.currentEngageform.navigation.enabledStart = false;\n      this.currentEngageform.navigation.hasPrev = false;\n      this.currentEngageform.navigation.enabledPrev = false;\n      this.currentEngageform.navigation.hasNext = false;\n      this.currentEngageform.navigation.enabledNext = false;\n      this.currentEngageform.navigation.hasFinish = false;\n      this.currentEngageform.navigation.enabledFinish = false;\n      this.currentEngageform.navigation.distance = 0;\n      this.currentEngageform.navigation.prev = ($event) => {\n        return;\n      };\n      this.currentEngageform.navigation.next = ($event, vcase: Page.ICase) => {\n        return;\n      };\n      this.currentEngageform.navigation.start = ($event) => {\n        return;\n      };\n      this.currentEngageform.navigation.finish = ($event, vcase: Page.ICase) => {\n        return;\n      };\n\n      if (!this.currentEngageform.navigation.truePick) {\n        this.currentEngageform.navigation.truePick = this.currentEngageform.navigation.pick;\n      }\n\n      // Block pick if answers are not allowed\n      this.currentEngageform.navigation.pick = (event, page: Page.ICase, options?) => {\n        if (this.currentEngageform.liveSettings.acceptResponses) {\n          this.currentEngageform.navigation.truePick(event, page, options);\n        } else {\n          this.currentEngageform.message = 'Answering is disabled at the moment.';\n        }\n      };\n\n      if (Extension.mode === Engageform.Mode.Summary && this.currentEngageform.current\n        && this.activePageId && _.has(Extension.config, 'engageform.presentationViewStats')) {\n        this.getAnswersForSummary().then((answersData) => {\n          this.currentEngageform.current.updateAnswers(answersData);\n        });\n\n        this.currentEngageform.liveSettings.showAnswers = true;\n      }\n    }\n\n    private removePage() {\n      return Extension.$timeout(() => {\n        this.activePage = null;\n        this.activePageId = null;\n\n        if (this.currentEngageform) {\n          this.currentEngageform.current = null;\n          this.currentEngageform.message = null;\n        }\n      });\n    }\n\n    private updateQuiz(EF) {\n      this.currentEngageform = EF;\n\n      this.event.trigger('now::changed', EF);\n\n      if (!this.currentEngageform.navigation.truePick) {\n        this.currentEngageform.navigation.truePick = this.currentEngageform.navigation.pick;\n      }\n\n      this.activeQuiz = this.currentEngageform;\n      this.activeQuizId = this.currentEngageform._engageformId;\n    }\n\n    private removeQuiz() {\n      return this.removePage().then(() => {\n        return Extension.$timeout(() => {\n          this.activeQuiz = null;\n          this.activeQuizId = null;\n\n          if (this.currentEngageform) {\n            this.currentEngageform.branding = null;\n            this.currentEngageform.current = null;\n            this.currentEngageform.message = null;\n            this.currentEngageform.meta = null;\n            this.currentEngageform.navigation = null;\n            this.currentEngageform.theme = null;\n            this.currentEngageform.title = null;\n            this.currentEngageform.type = null;\n          }\n\n          this.currentEngageform = null;\n        });\n      });\n\n    }\n\n    // Init chat\n    private initChat(id: string): ng.IPromise<any> {\n      var deferred = Extension.$q.defer();\n\n      if (!this.chat && id) {\n        this.chat = new ChatModule.Chat(id, this);\n\n        return this.chat.init();\n      } else {\n        // If it is already initialised (meaning it's available on this instance), return a fake promise that\n        // is here just to make the API looks better.\n        deferred.resolve();\n        return deferred.promise;\n      }\n    }\n\n    /**\n     * Handler of the \"liveEventStatus\" socket event that manages the active quiz and page.\n     * @param data Data from the event.\n     * @param {API.ILiveEmbed} opts Options provided in the initSocket method.\n     */\n    liveStatusEventHandler(data, opts: API.ILiveEmbed) {\n      // If the quiz is not active or there's no active quiz, run the deactivation process.\n      if (!data.isActive || !data.activeQuizId) {\n        this.removeQuiz();\n\n        // No questions provided in the data? Deactivate the page.\n      } else if (!data.activeQuestionId) {\n        this.removePage();\n\n        // Quiz changed, so initialise another form.\n      } else if (data.activeQuizId !== this.activeQuizId) {\n        this.EF.init({\n          id: data.activeQuizId,\n          mode: 'default',\n          live: true,\n          callback: {sendAnswerCallback: this.sendAnswerCallback},\n          embedSettings: this.embedSettings\n        }).then((res) => {\n          this.updateQuiz(res);\n          this.getPageById(data.activeQuestionId).then((page: Page.IPage) => {\n            this.updatePage(page);\n          });\n        });\n\n        // Question changed, so go to another page.\n      } else if (data.activeQuestionId !== this.activePageId) {\n        this.getPageById(data.activeQuestionId).then((page: Page.IPage) => {\n          this.updatePage(page);\n        });\n      }\n\n      // Change the current form settings if applies.\n      Extension.$timeout(() => {\n        if (this.currentEngageform) {\n          this.currentEngageform.liveSettings.showAnswers = data.showAnswers;\n          this.currentEngageform.liveSettings.acceptResponses = data.acceptResponses;\n        }\n      });\n\n      // Run the callback.\n      if (opts.callback && opts.callback.liveEventStatus) {\n        data.id = opts.id;\n        opts.callback.liveEventStatus(data);\n      }\n    }\n\n    // Sockets\n    private initSocket(opts: API.ILiveEmbed) {\n      var url = Extension.config.backend.socket + Extension.config.liveEvent.socketNamespace;\n      url = url.replace(':liveEventId', opts.id);\n\n      // Create callback object if not provided.\n      opts.callback = opts.callback || {};\n\n      // Connect to the socket.\n      this.socket = Extension.io.connect(url, {forceNew: true});\n\n      this.socket.on('liveEventStatus', data => {\n        this.liveStatusEventHandler(data, opts);\n      });\n\n      this.socket.on('connect', () => {\n        this.socket.emit('getStatus', {liveEventId: opts.id});\n      });\n\n      this.socket.on('disconnect', this.initSocket);\n\n      this.socket.on('error', (res) => {\n        console.warn('[ Liveevent:Socket ] Error: ' + res);\n      });\n\n      this.socket.on('reconnecting', () => {\n        console.warn('[ Liveevent:Socket ] Reconnecting');\n      });\n\n      this.socket.on('reconnect_failed', () => {\n        console.warn('[ Liveevent:Socket ] Reconnect failed');\n      });\n\n      this.socket.on('reconnect', () => {\n        this.socket.emit('getStatus', {liveEventId: opts.id});\n      });\n\n      this.socket.on('displayType', (data) => {\n        this.socket.emit('now::displayType', data);\n      });\n\n      this.socket.on('rateItQuestionStatus', (data) => {\n        this.currentEngageform.current.updateAnswers(data);\n      });\n\n      this.socket.on('multipleChoiceQuestionAnswers', (data) => {\n        this.currentEngageform.current.updateAnswers(data);\n      });\n\n      // Buzzer listening\n      this.socket.on('buzzerQuestionStatus', (data) => {\n        // Run callback\n        if (opts.callback.buzzerQuestionStatus) {\n          data.id = opts.id;\n          opts.callback.buzzerQuestionStatus(data);\n        }\n      });\n\n      // Active User Count listening\n      this.socket.on('activeUserCount', (data) => {\n        // Run callback\n        if (opts.callback.activeUserCount) {\n          opts.callback.activeUserCount(data);\n        }\n      });\n    }\n\n    // Get Liveevent\n    getById(id: string): ng.IPromise<ILiveeventResponse> {\n      var url = Extension.config.backend.domain + Extension.config.liveEvent.liveEventUrl;\n      url = url.replace(':liveEventId', id);\n\n      // TODO: Get quiz and current question\n      return Extension.$http.get(url).then((res) => {\n        if ([200, 304].indexOf(res.status) !== -1) {\n          return res.data;\n        }\n\n        return Extension.$q.reject(res);\n      });\n    }\n\n    // Get Page\n    private getPageById(questionId: string) {\n      var url = Extension.config.backend.domain + Extension.config.liveEvent.activeQuestion;\n      url = url.replace(':questionId', questionId);\n\n      return Extension.$http.get(url).then(function (res) {\n\n        if ([200, 304].indexOf(res.status) !== -1) {\n          return res.data;\n        }\n\n        this.$q.reject(res);\n      });\n    }\n\n    init(opts: API.ILiveEmbed) {\n      var deferred = Extension.$q.defer();\n\n      this.embedSettings = opts.embedSettings;\n      this.id = opts.id;\n      this.EF = opts.engageform;\n      this.sendAnswerCallback = opts.callback.sendAnswerCallback;\n\n      // Get Liveevent\n      this.getById(opts.id).then((res) => {\n        // Init socket\n        this.initSocket(opts);\n\n        // Init chat\n        this.initChat(res.chatId).then(() => {\n          // ...\n        });\n        deferred.resolve(this);\n      });\n\n      return deferred.promise;\n    }\n  }\n}\n","/// <reference path=\"./ichat.ts\" />\n\nmodule ChatModule {\n  function featuredMessageNotify(oldValue, newValue, message) {\n    this._liveevent.event.trigger('chat::messageFeatureStatusChanged', this._liveevent.id, message, newValue);\n    return message;\n  }\n\n  function updateFeaturedStatus(oldValue, newValue, message) {\n    message.featured = newValue;\n    return message;\n  }\n\n  export class Chat implements IChat {\n    id: string;\n    name: string;\n    premoderated: boolean;\n    direction: string;\n    theme: ITheme;\n\n    socket: SocketIOClient.Socket;\n    messages: IMessage[] = [];\n    user: IUser;\n    status: boolean;\n\n    private _liveevent: Liveevent.ILiveevent;\n\n    private updateMessageHandlers = {};\n\n    /**\n     * Registers handlers that will be invoked and will potentially modify the message on its data update.\n     * @param field\n     * @param handler\n     */\n    private registerUpdateMessageHandler(field: string, handler: (oldValue: any, newValue: any, message: IMessage) => IMessage) {\n      if (!this.updateMessageHandlers[field]) {\n        this.updateMessageHandlers[field] = [];\n      }\n\n      this.updateMessageHandlers[field].push(handler);\n    }\n\n    constructor(id: string, liveevent: Liveevent.ILiveevent) {\n      this.id = id;\n      this._liveevent = liveevent;\n\n      // Feature status handlers\n      this.registerUpdateMessageHandler('featured', updateFeaturedStatus);\n      this.registerUpdateMessageHandler('featured', featuredMessageNotify);\n    }\n\n    private login(data: IFbAuth, dataMe: any) { // FIXME: dateMe FB interface (v2.3 or 2.2) ?\n      this.user = {\n        accessToken: data.accessToken,\n        user: data.userID,\n        userLink: dataMe.link,\n        userName: dataMe.name,\n        userID: data.userID\n      };\n    }\n\n    private logout():void {\n      this.user = null;\n    }\n\n    private updateChat(data) {\n      this.id = data.id;\n      this.name = data.name;\n      this.premoderated = data.premoderated;\n      this.direction = data.chatDirection;\n      this.theme = data.theme;\n\n      // Get some old msgs\n      if(this._liveevent.activeQuiz ){\n        this.getMsgs();\n      }else{\n        this.messages = <IMessage[]>[];\n      }\n\n\n    }\n\n    private sendMsg(m: IMessage) {\n      if (!this.user) return;\n\n      var url = Extension.config.backend.domain + Extension.config.chat.sendUrl, msg;\n      url = url.replace(':chatId', this.id);\n\n      msg = {\n        accessToken: this.user.accessToken,\n        date: Date.now(),\n        hidden: false,\n        eventId: this._liveevent.activeQuiz._engageformId,\n        id: this.user.userId,\n        msg: m,\n        user: this.user.user,\n        userLink: this.user.userLink,\n        userName: this.user.userName\n      };\n\n      return Extension.$http.post(url, msg);\n    }\n\n    private getRandomColor() {\n      var letters = '0123456789ABCDEF';\n      var color = '#';\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    }\n\n    private getMsgs() {\n      var url = Extension.config.backend.domain + Extension.config.chat.messagesUrl+'/100/'+this._liveevent.activeQuiz._engageformId\n      url = url.replace(':chatId', this.id);\n      return Extension.$http.get(url).then((res) => {\n        this.messages = <IMessage[]>res.data;\n\n        if (this.messages.length) {\n          // Sort by newest\n          this.messages = _.sortBy(this.messages, 'date').reverse();\n\n          // Reverse msg order\n          if (this.direction && this.direction === 'ttb') {\n            this.messages.reverse();\n          }\n\n          // Generate colors for User Avatar\n          var colors: { [key:string]: string } = {};\n          this.messages = this.messages.map((msg: IMessage) => {\n            if (colors.hasOwnProperty(msg.userName)) {\n              msg.avatarColor = colors[msg.userName];\n            } else {\n              var color = this.getRandomColor();\n              colors[msg.userName] = color;\n              msg.avatarColor = color;\n            }\n            return msg;\n          });\n        }\n\n        _.forEach(this.messages, (message) => {\n          this._liveevent.event.trigger('chat::message', this._liveevent.id, message);\n        })\n      });\n    }\n\n    /**\n     * Handles updates of a message data, delegating data to handler functions.\n     * @param message\n     * @param newData\n     * @returns {IMessage}\n     */\n    private handleNewMessageData(message: IMessage, newData: IMessage) {\n      _.forOwn(newData, (value, field) => {\n        // When the value is different than it was before and there are handlers defined, call them.\n        if (value !== message[field] && _.isArray(this.updateMessageHandlers[field])) {\n          var oldValue = message[field];\n          _.forEach(this.updateMessageHandlers[field], (handler) => {\n            handler.call(this, oldValue, value, message);\n          })\n        }\n      });\n\n      return message;\n    }\n\n    private initSocket() {\n      var url = Extension.config.backend.socket;\n\n      this.socket = Extension.io.connect(url, { forceNew: true });\n\n      this.socket.on('error', (res) => {\n        console.warn(res);\n      });\n\n      this.socket.on('connect', (data) => {\n        // Join room\n        this.socket.emit('joinRoom', this.id);\n        // We can also leave room, to do so just emit 'leaveRoom' with roomId as param\n      });\n\n      // New msg event\n      this.socket.on('msg', (data) => {\n        // \"msg\" event is triggered not only when new message arrives, but also a message changes.\n        var existingMsg = _.find(this.messages, function(message) {\n          return message.id === data.id;\n        });\n\n        var existingUser = _.find(this.messages, function(message) {\n          return message.userName === data.userName;\n        });\n        data.avatarColor = existingUser ? existingUser.avatarColor : this.getRandomColor();\n\n        Extension.$rootScope.$apply(() => {\n          if (existingMsg) {\n            this.handleNewMessageData(existingMsg, data);\n          } else {\n            if (this.direction && this.direction === 'ttb') {\n              this.messages.push(<IMessage>data);\n            } else {\n              this.messages.unshift(<IMessage>data);\n            }\n          }\n        });\n\n        if (!existingMsg) {\n          this._liveevent.event.trigger('chat::message', this._liveevent.id, <IMessage>data);\n        }\n      });\n\n      this.socket.on('msgHide', (id) => {\n        this._liveevent.event.trigger('chat::hideMessage', id);\n\n        var messageIndex = this.messages.length;\n\n        for (var i = 0; i < this.messages.length; i += 1) {\n          if (this.messages[i].id === id) {\n            messageIndex = i;\n          }\n        }\n\n        Extension.$rootScope.$apply(() => {\n          this.messages.splice(messageIndex, 1);\n        });\n      });\n\n      // On disconect\n      this.socket.on('disconnect', this.initSocket);\n    }\n\n    init():ng.IPromise<IChatResponse> {\n      // Get chat details\n      var url = Extension.config.backend.domain + Extension.config.chat.detailUrl;\n      url = url.replace(':chatId', this.id);\n      return Extension.$http.get(url).then((res: IChatResponse) => {\n        this.updateChat(res.data);\n        this.initSocket();\n        return res;\n      });\n    }\n  }\n}\n","/// <reference path=\"../typings/tsd.d.ts\" />\n/// <reference path=\"./engageform/enum.ts\" />\n/// <reference path=\"./api/api.ts\" />\n/// <reference path=\"./liveevent/liveevent.ts\" />\n/// <reference path=\"./chat/chat.ts\" />\n\nclass Extension {\n  static $http: ng.IHttpService;\n  static $q: ng.IQService;\n  static $timeout: ng.ITimeoutService;\n  static localStorage: ng.local.storage.ILocalStorageService;\n  static $rootScope: ng.IRootScopeService;\n  static config;\n  static io: SocketIOClientStatic;\n  static mode: Engageform.Mode = Engageform.Mode.Undefined;\n  Liveevent: Liveevent.ILiveevent;\n\n  private static _instances: Liveevent.ILiveeventInstances = {};\n\n  constructor($http: ng.IHttpService, $q: ng.IQService, $timeout: ng.ITimeoutService, localStorage: ng.local.storage.ILocalStorageService, $rootScope: ng.IRootScopeService, ApiConfig) {\n    Extension.$http = $http;\n    Extension.$timeout = $timeout;\n    Extension.$q = $q;\n    Extension.localStorage = localStorage;\n    Extension.config = ApiConfig;\n    Extension.$rootScope = $rootScope;\n  }\n\n  init(opts: API.ILiveEmbed): ng.IPromise<Liveevent.ILiveevent> {\n    if (Extension._instances[opts.id]) {\n      return Extension._instances[opts.id];\n    }\n\n    Extension.io = <SocketIOClientStatic>opts.io;\n\n    switch (opts.mode) {\n      case 'summary':\n        Extension.mode = Engageform.Mode.Summary;\n        break;\n      case 'default':\n      case '':\n      case undefined:\n        Extension.mode = Engageform.Mode.Default;\n        break;\n      default:\n        return Extension.$q.reject({\n          status: 'error',\n          error: {\n            code: 406,\n            message: 'Mode property not supported.'\n          },\n          data: opts\n        });\n    }\n\n    var liveEvent = new Liveevent.Liveevent();\n\n    if (!opts.callback) {\n      opts.callback = {\n        sendAnswerCallback: function(){}\n      }\n    } else if (!opts.callback.sendAnswerCallback) {\n      opts.callback.sendAnswerCallback = function(){};\n    }\n\n    return Extension._instances[opts.id] = liveEvent.init(opts);\n  }\n}\n\nExtension.$inject = ['$http', '$q', '$timeout', 'localStorageService', '$rootScope', 'ApiConfig'];\napp.service('Liveevent', Extension);\n","/// <reference path=\"../branding/ibranding.ts\" />\n\nmodule API {\n  export interface IQuiz {\n    _id: string;\n    title: string;\n    type: string;\n\n    tabs: {\n      chatTitle: string;\n      liveTitle: string;\n      logoUrl: string;\n    };\n\n    settings: {\n      allowAnswerChange: boolean;\n      branding?: Branding.IBrandingData,\n      share?: {\n        title: string;\n        imageUrl: string;\n        link: string;\n        description: string;\n      }\n    };\n    theme: {\n      answerBackgroundColor: string;\n      answerBorderColor: string;\n      answerColor: string;\n      backgroundBrightness: string;\n      backgroundColor: string;\n      backgroundImageBlur: string;\n      backgroundImageFile: string;\n      backgroundImagePosition: string;\n      buttonColor: string;\n      font: string;\n      fontUrl: string;\n      questionColor: string;\n      customThemeCssFile: string;\n      tabFontColor: string;\n      tabColor: string;\n      tabBorderColor: string;\n    };\n  }\n}\n","module Page {\n  export enum CaseType {\n    Undefined,\n    Image,\n    Input,\n    Iteration,\n    Text\n  }\n\n  export enum Type {\n    Undefined,\n    EndPage,\n    Form,\n    MultiChoice,\n    PictureChoice,\n    Rateit,\n    StartPage,\n    Buzzer,\n    Poster\n  }\n}\n","module Page {\n  export interface ISetting {\n    showAnswers: boolean;\n    showCorrectAnswer: boolean;\n    showMainMedia: boolean;\n    showDescription: boolean;\n    requiredAnswer: boolean;\n  }\n\n  export interface ILiveSetting {\n      acceptResponses: boolean;\n      showAnswers: boolean;\n  };\n}\n","///<reference path=\"../page/ipage.ts\"/>\n\nmodule Engageform {\n  export interface IEngageform {\n    _engageformId?: string;\n    enabled: boolean;\n    type: Type;\n    title: string;\n    settings: ISetting;\n    theme: ITheme;\n    branding: Branding.IBranding;\n    tabs: ITabs;\n\n    Mode: Engageform.Mode;\n\n    current: Page.IPage;\n    message: string;\n    navigation: Navigation.INavigation;\n\n    meta?: any;\n\n    pages: Page.IPages;\n    startPages: string[];\n    endPages: string[];\n    availablePages: string[];\n    hasForms: boolean;\n\n    liveSettings: Page.ILiveSetting;\n\n    isType(type: Type): boolean;\n    init(opts: API.IEmbed): ng.IPromise<Engageform.IEngageform>;\n\n    initPage(page: Page.IPage): void;\n\n    initPages(): ng.IPromise<IEngageform>;\n    setCurrent(pageId: string);\n    setCurrentEndPage(): ng.IPromise<API.IQuizFinish>;\n  }\n}\n","/// <reference path=\"api/iembed.ts\" />\n/// <reference path=\"api/iquizquestion.ts\" />\n/// <reference path=\"api/iquizquestionsres.ts\" />\n/// <reference path=\"api/iquizquestionanswer.ts\" />\n/// <reference path=\"api/iquizquestionanswerres.ts\" />\n/// <reference path=\"api/iquiz.ts\" />\n/// <reference path=\"api/iquizres.ts\" />\n/// <reference path=\"api/iquizfinish.ts\" />\n/// <reference path=\"api/iquizfinishres.ts\" />\n\n/// <reference path=\"page/enum.ts\" />\n/// <reference path=\"page/icase.ts\" />\n/// <reference path=\"page/ipage.ts\" />\n/// <reference path=\"page/ipages.ts\" />\n/// <reference path=\"page/ipagesent.ts\" />\n/// <reference path=\"page/isettings.ts\" />\n\n/// <reference path=\"engageform/enum.ts\" />\n/// <reference path=\"engageform/iengageform.ts\" />\n/// <reference path=\"engageform/isettings.ts\" />\n/// <reference path=\"engageform/itheme.ts\" />\n/// <reference path=\"engageform/itabs.ts\" />\n\n/// <reference path=\"branding/ibranding.ts\" />\n\n/// <reference path=\"navigation/inavigation.ts\" />","/*!\n * 4screens-angular-liveevent v0.2.7\n * (c) 2015 Nopattern sp. z o.o.\n * License: proprietary\n */\n","module Util {\n  export interface IEvent {\n    listen(event: string, callback: any): void;\n    trigger(event: string, ...data: any[]): void;\n    unsubscribe(event: string, callback: any): void;\n  }\n\n  export interface IListenersDictionary {\n    [index: string]: IListener[];\n  }\n\n  export interface IListener {\n    (): void;\n  }\n\n  export class Event implements IEvent {\n    private _listener: IListenersDictionary = {};\n\n    /**\n     * Register callback for given event.\n     *\n     * @param {String} event\n     * @param {Function} callback\n     */\n    listen(event: string, callback: any): void {\n      if (!this._listener[event]) {\n        this._listener[event] = [];\n      }\n\n      this._listener[event].push(callback);\n    }\n\n    /**\n     * Removes one or all calbacks from the registered listeners.\n     *\n     * @param {String} event\n     * @param {Function} callback\n       */\n    unsubscribe(event: string, callback?: any): void {\n      if (this._listener[event]) {\n        if (!callback) {\n          this._listener[event].length = 0;\n        } else {\n          _.pull(this._listener[event], callback);\n        }\n      }\n    }\n\n    /**\n     * Fire event with given arguments.\n     *\n     * @param {string} event\n     * @param {args...} data\n     */\n    trigger(event: string, ...data: any[]): void {\n      var args = Array.apply(null, arguments).slice(1);\n      var listeners = this._listener[event];\n\n      if (!listeners) {\n        return;\n      }\n\n      for (var i=0; i<listeners.length; i++) {\n        listeners[i].apply(null, args);\n      }\n    }\n  }\n}\n"]}